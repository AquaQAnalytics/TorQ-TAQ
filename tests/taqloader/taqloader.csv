action,ms,bytes,lang,code,repeat,minver,comment
before,0,,q,"hdbdir:hsym`$getenv[`KDBTESTS],"/hdb"",1,0,set hdb env
before,0,,q,"symdir:hsym`$getenv[`KDBTESTS],"/hdb"",1,0,set sym env
before,0,,q,"tempdb:hsym`$getenv[`KDBTESTS],"/tempdb"",1,0,set tempdb env
before,0,,q,"fileparams:@[;`tempdb`dbdir`symdir;:;(tempdb;hdbdir;symdir)]each fileparams",1,0,update directory params to test directories in params table
before,0,,q,"filedrop:hsym`$getenv[`KDBTESTS],"/taqfiles/"",1,0,set filedrop env
before,0,,q,"dbcheck:`final in key[tempdb]"
before,0,,q,"rm:"rm -r "",1,0,test
before,0,,q,"rmfinal:$[dbcheck;(rm),(.os.pth tempdb),"/final";()]",1,0,remove data if it exists in test tempdb
before,0,,q,"system[rmfinal]",1,0,remove data if it exists in test tempdb
before,0,,q,"filetypeq:`quote",1,0,define quote filetype
before,0,,q,"filetypet:`trade",1,0,define trade filetype
before,0,,q,"filetypen:`nbbo",1,0,define nbbo filetype
before,0,,q,"optionalparams:()!()",1,0,define optionalparams
before,0,,q,"filetoloadq1:`SPLITS_US_ALL_BBO_A_20180103.gz",1,0,define filetoload for quote
before,0,,q,"filepathq1:hsym`$getenv[`KDBTESTS],"/taqfiles/SPLITS_US_ALL_BBO_A_20180103.gz"",1,0,define correct filepath
before,0,,q,"loadidq1:1",1,0,define loadid
before,0,,q,"filetoloadq2:`SPLITS_US_ALL_BBO_X_20180103.gz",1,0,define filetoload for quote that does not exist
before,0,,q,"filepathq2:hsym`$getenv[`KDBTESTS],"/taqfiles/SPLITS_US_ALL_BBO_X_20180103.gz"",1,0,define filepath for quote that does not exist
before,0,,q,"loadidq2:2",1,0,define loadid
before,0,,q,"filetoloadq3:`SPLITS_US_ALL_BBO_A_2018010A.gz",1,0,define filetoload for quote with an incorrect date
before,0,,q,"filepathq3:hsym`$getenv[`KDBTESTS],"/taqfiles/SPLITS_US_ALL_BBO_A_2018010A.gz"",1,0,define filepath for quote with an incorrect date
before,0,,q,"loadidq3:3",1,0,define loadid
before,0,,q,"filetoloadt1:`EQY_US_ALL_TRADE_20180305.gz",1,0,define filetoload for quote with an incorrect date
before,0,,q,"filepatht1:hsym`$getenv[`KDBTESTS],"/taqfiles/EQY_US_ALL_TRADE_20180305.gz"",1,0,define filepath for quote with an incorrect date
before,0,,q,"loadidt1:4",1,0,define loadid
before,0,,q,"filetoloadn1:`EQY_US_ALL_NBBO_20180306.gz",1,0,define filetoload for quote with an incorrect date
before,0,,q,"filepathn1:hsym`$getenv[`KDBTESTS],"/taqfiles/EQY_US_ALL_NBBO_20180306.gz"",1,0,define filepath for quote with an incorrect date
before,0,,q,"loadidn1:5",1,0,define loadid
before,0,,q,"quoteparA:`$"quoteA/2018.01.03/quote"",1,0,define c as quote partition
before,0,,q,"tradepar:`$"final/2018.03.05/trade"",1,0,define trade partition
before,0,,q,"nbbopar:`$"final/2018.03.06/nbbo"",1,0,define nbbo partition
before,0,,q,"taqloaderparamsq1:`filetype`filetoload`filepath`loadid!(filetypeq;filetoloadq1;filepathq1;loadidq1)",1,0,define taqloaderparams for quote
before,0,,q,"taqloaderparamsq2:`filetype`filetoload`filepath`loadid!(filetypeq;filetoloadq2;filepathq2;loadidq2)",1,0,define taqloaderparams for quote
before,0,,q,"taqloaderparamsq3:`filetype`filetoload`filepath`loadid!(filetypeq;filetoloadq3;filepathq3;loadidq3)",1,0,define taqloaderparams for quote
before,0,,q,"taqloaderparamst1:`filetype`filetoload`filepath`loadid!(filetypet;filetoloadt1;filepatht1;loadidt1)",1,0,define taqloaderparams for trade
before,0,,q,"taqloaderparamsn1:`filetype`filetoload`filepath`loadid!(filetypen;filetoloadn1;filepathn1;loadidn1)",1,0,define taqloaderparams for nbbo
before,0,,q,"a:"Could not find: "",1,0,define a
before,0,,q,"b:a,.os.pth filepathq2",1,0,define b to complete path
before,0,,q,"d:"Could not extract date in "",1,0,define d to complete path
run,0,,q,"ltfresult1:loadtaqfile[taqloaderparamsq1;optionalparams]",0,0, run loader function for correct file
run,0,,q,"ltfresult2:loadtaqfile[taqloaderparamsq2;optionalparams]",0,0, run loader function for correct file
run,0,,q,"ltfresult3:loadtaqfile[taqloaderparamsq3;optionalparams]",0,0, run loader function for correct file
run,0,,q,"ltfresult4:loadtaqfile[taqloaderparamst1;optionalparams]",0,0, run loader function for correct file
run,0,,q,"ltfresult5:loadtaqfile[taqloaderparamsn1;optionalparams]",0,0, run loader function for correct file
true,0,,q,"(ltfresult1 _ `loadendtime)~`tablepath`tabletype`loadid`tabledate`loadstatus`loadmessage!(.Q.dd[tempdb;quoteparA];`quote;1;2018.01.03;1h;"success")",0,0,compare all results except loadendtimehdbdi
true,0,,q,"(ltfresult2 _ `loadendtime)~`tablepath`tabletype`loadid`tabledate`loadstatus`loadmessage!(`;`quote;2;2018.01.03;0h;b)",0,0,compare all results except loadendtime
true,0,,q,"(ltfresult3 _ `loadendtime)~`tablepath`tabletype`loadid`tabledate`loadstatus`loadmessage!(`;`quote;3;0Nd;0h;d,string filetoloadq3)",0,0,compare all results except loadendtime
true,0,,q,"(ltfresult4 _ `loadendtime)~`tablepath`tabletype`loadid`tabledate`loadstatus`loadmessage!(.Q.dd[tempdb;tradepar];`trade;4;2018.03.05;1h;"success")",0,0,compare results for trade file
true,0,,q,"(ltfresult5 _ `loadendtime)~`tablepath`tabletype`loadid`tabledate`loadstatus`loadmessage!(.Q.dd[tempdb;nbbopar];`nbbo;5;2018.03.06;1h;"success")",0,0,compare results for nbbo file
before,0,,q,"dirs:.Q.dd[tempdb;]each `final`quoteA",1,0,define directories for final tempdb and quoteA
true,0,,q,"`final`quoteA~key tempdb",1,0,check final tempdb and quoteA directory is made
true,0,,q,"(`2018.03.05`2018.03.06;enlist `2018.01.03)~key each dirs",1,0,check date partitions are created 
true,0,,q,"`trade~first key `$(string first dirs),"/2018.03.05"",1,0,check file path for trade
true,0,,q,"`nbbo~first key `$(string first dirs),"/2018.03.06"",1,0,check file path for nbbo
false,0,,q,"`final`quoteA`quoteX~key tempdb",1,0,check incorrect quoteX was not loaded and that file does not exist
before,0,,q,"returndict:`tablepath`tabletype`loadid`tabledate!(`;`quote;1;2018.01.01)",1,0,define returndict for buildreturndict function
before,0,,q,"brdresult:buildreturndict[returndict;1h;"success"]",1,0,call buildreturndict function
true,0,,q,"(brdresult _ `loadendtime)~`tablepath`tabletype`loadid`tabledate`loadstatus`loadmessage!(`;`quote;1;2018.01.01;1h;"success")",1,0,check expected output of buildreturndict
